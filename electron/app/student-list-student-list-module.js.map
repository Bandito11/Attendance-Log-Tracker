{"version":3,"sources":["webpack:///./src/app/student-list/student-list.module.ts","webpack:///./src/app/student-list/student-list.page.html","webpack:///./src/app/student-list/student-list.page.scss","webpack:///./src/app/student-list/student-list.page.ts"],"names":[],"mappings":"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","file":"student-list-student-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StudentListPage } from './student-list.page';\nimport { ComponentsModule } from '../components/components.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StudentListPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [StudentListPage]\n})\nexport class StudentListPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>{{htmlControls.toolbar.title}}</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <app-menu-button></app-menu-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"goToCreate()\\\">\\n          {{htmlControls.toolbar.buttons.add}}\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content id=\\\"student-list\\\">\\n  <ion-searchbar placeholder=\\\"{{htmlControls.search}}\\\" (ionInput)=\\\"searchStudent($event)\\\" animated=\\\"true\\\" type=\\\"search\\\">\\n  </ion-searchbar>\\n  <ion-item>\\n    <ion-label>{{htmlControls.sort}}</ion-label>\\n    <ion-select interface=\\\"popover\\\" multiple=\\\"false\\\" #sort (ionChange)=\\\"sortData(sort.value)\\\">\\n      <ion-select-option *ngFor=\\\"let option of selectOptions\\\" value=\\\"{{option}}\\\">{{option}}</ion-select-option>\\n    </ion-select>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>{{htmlControls.filter}}</ion-label>\\n    <ion-select interface=\\\"popover\\\" multiple=\\\"false\\\" placeholder=\\\"None\\\" #filter\\n      (ionChange)=\\\"filterByClass(filter.value)\\\">\\n      <ion-select-option *ngFor=\\\"let class of filterOptions\\\" value=\\\"{{class}}\\\">{{class}}</ion-select-option>\\n    </ion-select>\\n  </ion-item>\\n  <ion-list lines=\\\"none\\\">\\n    <ion-virtual-scroll [items]=\\\"students\\\" approxHeaderHeight=\\\"44px\\\" approxItemHeight=\\\"270px\\\">\\n      <ion-card *virtualItem=\\\"let student\\\" (click)=\\\"goToProfile(student.id)\\\">\\n        <ion-card-header>\\n          <ion-card-title>{{student.firstName}}\\n            <span *ngIf=\\\"student.initial\\\">{{student.initial[0]}}.</span> {{student.lastName}}\\n          </ion-card-title>\\n          <ion-card-subtitle><span class=\\\"label\\\">ID: </span>{{student.id}}</ion-card-subtitle>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col size=\\\"3\\\">\\n                <ion-thumbnail>\\n                  <ion-img src=\\\"{{student.picture}}\\\" alt=\\\"An image of user\\\"></ion-img>\\n                </ion-thumbnail>\\n              </ion-col>\\n              <ion-col size=\\\"9\\\">\\n                <ion-item>\\n                  <ion-label text-wrap>\\n                    <span class=\\\"label\\\">{{htmlControls.address}}</span>{{student.address}}\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label text-wrap>\\n                    <span class=\\\"label\\\">{{htmlControls.town}}</span>{{student.town}}\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label text-wrap>\\n                    <span class=\\\"label\\\">{{htmlControls.state}}</span>{{student.state}}\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item *ngIf=\\\"student.class\\\">\\n                  <ion-label text-wrap>\\n                    <span class=\\\"label\\\">{{htmlControls.class}}</span>{{student.class}}\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item *ngIf=\\\"student.phoneNumber\\\">\\n                  <ion-label text-wrap>\\n                    <span class=\\\"label\\\">{{htmlControls.phone}}</span>{{student.phoneNumber}}\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item *ngIf=\\\"student.emergencyContactName\\\">\\n                  <ion-label text-wrap>\\n                    <span class=\\\"label\\\">{{htmlControls.contact}}</span>{{student.emergencyContactName}}\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item *ngIf=\\\"student.emergencyContactPhoneNumber\\\">\\n                  <ion-label text-wrap>\\n                    <span class=\\\"label\\\">{{htmlControls.phone}}</span>{{student.emergencyContactPhoneNumber}}\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item *ngIf=\\\"!student.isActive\\\">\\n                  <ion-label text-wrap>\\n                    <p>\\n                      {{htmlControls.active}}\\n                    </p>\\n                  </ion-label>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n          <p class=\\\"attended\\\">\\n            {{htmlControls.profile}}{{student.firstName}}{{htmlControls.profile2}}\\n          </p>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-virtual-scroll>\\n  </ion-list>\\n\\n</ion-content>\"","module.exports = \"#student-list .label {\\n  font-weight: bolder; }\\n\\n#student-list .name {\\n  font-size: 130%; }\\n\\n.attended {\\n  color: #e6a4a4; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lc3RlYmFubW9yYWxlcy9Qcm9qZWN0cy9hbWFyYW50aHVzMi9zcmMvYXBwL3N0dWRlbnQtbGlzdC9zdHVkZW50LWxpc3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksbUJBQW1CLEVBQUE7O0FBRnZCO0VBS0ksZUFBZSxFQUFBOztBQUduQjtFQUNFLGNBQXlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zdHVkZW50LWxpc3Qvc3R1ZGVudC1saXN0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNzdHVkZW50LWxpc3Qge1xuICAubGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gIH1cbiAgLm5hbWUge1xuICAgIGZvbnQtc2l6ZTogMTMwJTtcbiAgfVxufVxuLmF0dGVuZGVkIHtcbiAgY29sb3I6IHJnYigyMzAsIDE2NCwgMTY0KTtcbn1cbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IStudent, ISimpleAlertOptions, IRecord } from '../common/models';\nimport { AlertController, NavController, ModalController } from '@ionic/angular';\nimport { AmaranthusDBProvider } from '../services/amaranthus-db/amaranthus-db';\nimport { handleError } from '../common/handleError';\nimport { sortStudentsbyId, sortStudentsName, filterStudentsList } from '../common/search';\nimport { CreatePage } from '../create/create.page';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.page.html',\n  styleUrls: ['./student-list.page.scss'],\n})\nexport class StudentListPage implements OnInit {\n  students: (IStudent & IRecord)[];\n  private unfilteredStudents: (IStudent & IRecord)[];\n  query: string;\n  selectOptions;\n  filterOptions: string[];\n  @ViewChild('sort') sortElement;\n  @ViewChild('filter') filterElement;\n\n  htmlControls = {\n    toolbar: {\n      title: '',\n      buttons: {\n        event: '',\n        add: ''\n      }\n    },\n    sort: '',\n    filter: '',\n    class: '',\n    phone: '',\n    search: '',\n    address: '',\n    town: '',\n    state: '',\n    active: `Student is not active on the roster!`,\n    contact: '',\n    profile: 'Tap to see ',\n    profile2: `'s profile!`\n  };\n\n  language = '';\n\n  LANGUAGE = {\n    english: {\n      toolbar: {\n        title: 'Roster',\n        buttons: {\n          add: 'Add'\n        }\n      },\n      sort: 'Sort by: ',\n      filter: 'Filter by: ',\n      class: 'Class: ',\n      phone: 'Phone: ',\n      search: 'Search by ID or Name',\n      address: 'Adress: ',\n      town: 'Town: ',\n      state: 'State: ',\n      active: `Student is not active on the roster!`,\n      contact: 'Emergency Contact: ',\n      profile: 'Tap to see ',\n      profile2: `'s profile!`\n    },\n    spanish: {\n      toolbar: {\n        title: 'Registro',\n        buttons: {\n          add: 'Crear'\n        }\n      },\n      sort: 'Ordenar por: ',\n      filter: 'Filtrar por: ',\n      class: 'Clase: ',\n      phone: 'Teléfono: ',\n      attended: 'Asistió',\n      absence: 'Ausente',\n      present: ` está presente hoy.`,\n      absent: ` está ausente hoy.`,\n      search: 'Buscar por ID o Nombre',\n      address: 'Dirección: ',\n      town: 'Pueblo: ',\n      state: 'Estado: ',\n      active: `¡No esta activo en el registro!`,\n      contact: 'Contacto de Emergencia: ',\n      profile: 'Presiona para ver el perfil de ',\n      profile2: ``\n    }\n  };\n\n  constructor(\n    private alertCtrl: AlertController,\n    private navCtrl: NavController,\n    private modalCtrl: ModalController,\n    private db: AmaranthusDBProvider,\n    private storage: Storage\n  ) { }\n\n  ngOnInit() {\n    this.students = [];\n    this.unfilteredStudents = [];\n  }\n\n  ionViewWillEnter() {\n    this.sortElement.placeholder = 'None';\n    this.query = 'None';\n    this.storage.get('language').then(value => {\n      if (value) {\n        this.language = value;\n      } else {\n        this.language = 'english';\n      }\n      this.htmlControls = this.LANGUAGE[this.language];\n      if (this.language === 'spanish') {\n        this.selectOptions = ['ID', 'Nombre', 'Sin filtro'];\n        this.sortElement.placeholder = 'Sin filtro';\n        this.filterElement.placeholder = 'Sin filtro';\n      } else {\n        this.selectOptions = ['ID', 'Name', 'None'];\n        this.sortElement.placeholder = 'None';\n        this.filterElement.placeholder = 'None';\n      }\n      this.getStudents();\n      this.filterOptions = this.getFilterOptions();\n    });\n  }\n\n  private initializeStudentsList() {\n    this.students = [...this.unfilteredStudents];\n  }\n\n  getFilterOptions() {\n    let options = [];\n    const checkIfHaveClass = this.students.filter(student => {\n      if (student.class) {\n        return true;\n      }\n    });\n    for (const student of checkIfHaveClass) {\n      if (options.indexOf(student.class) === -1) {\n        options = [...options, student.class];\n      }\n    }\n    if (this.language === 'spanish') {\n      options = [...options, 'Activo', 'Inactivo', 'Masculino', 'Femenino', 'No revelado', 'Sin filtro'];\n    } else {\n      options = [...options, 'Active', 'Not Active', 'Male', 'Female', 'Undisclosed', 'None'];\n    }\n    return options;\n  }\n\n  goToProfile(id) {\n    this.navCtrl.navigateForward(`/tabs/tabs/roster/profile/${id}`);\n  }\n\n  filterByClass(option: string) {\n    let newQuery = [];\n    switch (option) {\n      case 'Male':\n      case 'Female':\n      case 'Undisclosed':\n        const gender = option.toLowerCase();\n        newQuery = this.unfilteredStudents.filter(student => {\n          if (student.gender === gender) {\n            return student;\n          }\n        });\n        this.students = [...newQuery];\n        break;\n      case 'Masculino':\n        this.filterByClass('Male');\n        break;\n      case 'Femenino':\n        this.filterByClass('Female');\n        break;\n      case 'No revelado':\n        this.filterByClass('Undisclosed');\n        break;\n      case 'Sin filtro':\n        this.filterByClass('None');\n        break;\n      case 'None':\n        this.initializeStudentsList();\n        break;\n      case 'Activo':\n        this.filterByClass('Active');\n        break;\n      case 'Inactivo':\n        this.filterByClass('Not Active');\n        break;\n      case 'Active':\n        newQuery = this.unfilteredStudents.filter(student => {\n          if (student.isActive) {\n            return student;\n          }\n        });\n        this.students = [...newQuery];\n        break;\n      case 'Not Active':\n        newQuery = this.unfilteredStudents.filter(student => {\n          if (!student.isActive) {\n            return student;\n          }\n        });\n        this.students = [...newQuery];\n        break;\n      case 'None':\n        this.initializeStudentsList();\n        break;\n      default:\n        newQuery = this.unfilteredStudents.filter(student => {\n          if (student.class === option) {\n            return student;\n          }\n        });\n        this.students = [...newQuery];\n    }\n  }\n\n  searchStudent(event) {\n    const query: string = event.target.value;\n    query ? this.queryStudentsList(query) : this.initializeStudentsList();\n  }\n\n  private getStudents() {\n    try {\n      const response = this.db.getAllStudents();\n      if (response.success === true) {\n        this.students = <any>response.data;\n        this.unfilteredStudents = <any>response.data;\n      } else {\n        handleError(response.error);\n      }\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  sortData(option: string) {\n    switch (option) {\n      case 'Id':\n        this.sortStudentsbyId();\n        break;\n      case 'Name':\n        this.sortStudentsName();\n        break;\n      default:\n        this.students = [...this.unfilteredStudents];\n    }\n  }\n\n  sortStudentsbyId() {\n    this.students = <any>sortStudentsbyId(this.students);\n  }\n\n  sortStudentsName() {\n    this.students = <any>sortStudentsName(this.students);\n  }\n\n  private queryStudentsList(query: string) {\n    this.students = <any>filterStudentsList({ query: query, students: this.unfilteredStudents });\n  }\n\n  async goToCreate() {\n    const modal = await this.modalCtrl.create({\n      component: CreatePage\n    });\n    modal.present();\n    modal.onDidDismiss().then(() => {\n      this.getStudents();\n      this.filterOptions = this.getFilterOptions();\n    });\n  }\n\n  private async showSimpleAlert(options: ISimpleAlertOptions) {\n    const alert = await this.alertCtrl\n      .create({\n        header: options.header,\n        message: options.message,\n        buttons: options.buttons\n      });\n    alert.present();\n  }\n\n}\n"],"sourceRoot":""}